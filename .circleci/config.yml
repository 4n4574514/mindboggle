## Configuration file for circleci.com continuous integration (testing)
##
## All dependencies are accounted for in the environment.yml file.
##
## Authors:
##    - Arno Klein, 2016,2018  (arno@mindboggle.info)  http://binarybottle.com
##
## Copyright 2016-2018,  Mindboggle team (mindboggle.info), Apache v2.0 License

version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.6.2
        environment:
          HOME: /home/ubuntu
          CONDA_ROOT: ${HOME}/miniconda
          ENV_NAME: mindboggle-env
          ENV_PREFIX: ${CONDA_ROOT}/envs/${ENV_NAME}
          python: ${ENV_PREFIX}/bin/python
          vtk_cpp_tools: ${HOME}/mindboggle/vtk_cpp_tools/bin
          PATH: ${ENV_PREFIX}/bin:${CONDA_ROOT}/bin:${vtk_cpp_tools}:${PATH}
          SITEPKGS: ${ENV_PREFIX}/lib/python3.5/site-packages
          PYTHONPATH: ${SITEPKGS}/vtk:${PYTHONPATH}
          MB: ${SITEPKGS}/mindboggle
    steps:
      - checkout
      - run: 
        name: install requirements/dev.txt
        command: pip install -r requirements/dev.txt
      - run:
        name: update
        command: sudo apt-get update; sudo apt-get install libllvm-3.3
        #---------------------------------------------------------------------
        # Download/install conda (if not already cached)
        #---------------------------------------------------------------------
      - run:
        name: install conda
        command: | 
            if [[ ! -d $CONDA_ROOT ]]; then
                echo "Installing Miniconda3...";
                wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh &&
                bash Miniconda3-latest-Linux-x86_64.sh -b -p $CONDA_ROOT;
            else
                echo "Using cached Miniconda install";
            fi
      - run:
        name: configure conda
        command: conda config --set show_channel_urls yes --set always_yes yes
      - run:
        name: update conda
        command: conda update conda conda-env
        #---------------------------------------------------------------------
        # Create a Python environment (see environment.yml file):
        #---------------------------------------------------------------------
      - run:
        name: create a python environment
        command: conda env create
      - run:
        name: activate environment
        command: source activate mindboggle-env
      - run:
        name: conda info
        command: conda info --envs
        #---------------------------------------------------------------------
        # Install Mindboggle and its C++ code:
        #---------------------------------------------------------------------
      - run:
        name: install mindboggle
        command: $python setup.py install
      - run:
        name: install mindboggle c++ code
        command: mkdir $vtk_cpp_tools && cd $vtk_cpp_tools && cmake ../ && make
      #-----------------------------------------------------------------------
      # Run tests
      #-----------------------------------------------------------------------
      - run:
        name: thirdparty
        command: $python -m "nose" --with-doctest ${MB}/thirdparty/
      - run:
        name: mio
        command: $python -m "nose" --with-doctest ${MB}/mio/
      - run:
        name: guts
        command: $python -m "nose" --with-doctest ${MB}/guts/
      - run:
        name: shapes
        command: $python -m "nose" --with-doctest ${MB}/shapes/
      - run:
        name: features
        command: $python -m "nose" --with-doctest ${MB}/features/

